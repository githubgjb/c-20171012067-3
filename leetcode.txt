leetcode注册

https://leetcode-cn.com/problems/reverse-words-in-a-string-iii/

13936931626
1982629AB

fly123
1982629AB 
--------------------------------------
leetcode开会



https://leetcode-cn.com/problems/reverse-words-in-a-string-iii/

557. 反转字符串中的单词 III

给定一个字符串，你需要反转字符串中每个单词的字符顺序，同时仍保留空格和单词的初始顺序。

示例 1:

输入: "Let's take LeetCode contest"
输出: "s'teL ekat edoCteeL tsetnoc" 

注意：在字符串中，每个单词由单个空格分隔，并且字符串中不会有任何额外的空格。


mkdir -p code/string
touch code/string/lesson1.js
mkdir -p test/string
mkdir test/string/lesson1.test.js


export default(str) => {
	return ''
}


export default(str) => {
	//根据空格来进行分割
	let arr = str.split(' ')
	//对数组进行遍历,然后每个元素进行反转
	let result = arr.map(item => {
		return item.split('').reverse().join('')
	})
	return result.join(' ')
}

/**
 * @param {string} s
 * @return {string}
 */
var reverseWords = function(s) {
    let arr = s.split(' ')
	let result = arr.map(item => {
		return item.split('').reverse().join('')
	})
	return result.join(' ')
    
};

//更优雅,但不好理解的写法
//对数组进行遍历,然后每个元素进行反转

//根据空格来进行分割

/**
 * @param {string} s
 * @return {string}
 */
var reverseWords = function(s) {

	return s.split(' ').map(item => {
		return item.split('').reverse().join('')
	}).join(' ')
    
};

正则的写法

JS中使用正则表达式g模式和非g模式的区别
g是global的缩写啊！
\s 是空格

/**
 * @param {string} s
 * @return {string}
 */
var reverseWords = function(s) {

	return s.split(/\s/g).map(item => {
		return item.split('').reverse().join('')
	}).join(' ')
    
};

leetcode不能提交,但可以运行
//用match
/**
 * @param {string} s
 * @return {string}
 */
var reverseWords = function(s) {

	return s.match(/[\w']+/g).map(item => {
		return item.split('').reverse().join('')
	}).join(' ')
    
};

计算子串原理讲解(18:31)


